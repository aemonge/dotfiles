"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => TIPS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    " C-k snippet completion
    " tab word completion
    " C-l Reload Tab
    " /<C-f> or :<C-f> to edit vim like the search | comands
    " :r !cmd PASTE the cmd output
    " Try g; and g,. They jump backward and forward in the inserted changelis
    " To correct the tabs and sapces :retab
    " Tabs gt gT to move around them
    " <leader>tw toggles wrap
    " c-l reload file & syntax's

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Temp Hack && fixes due experimental verions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    " Vim 7.4 regexp engine crashes syntax's
    " set regexpengine=1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => GENERAL OPTS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    """""""""""""""""
    " File realated "
    """""""""""""""""
        set expandtab         " use spaces instead of tabs
            set cindent
            set tabstop=4     " tabs are 4 spaces width
            set shiftwidth=4  " softtabs are 4 spaces width
        set encoding=utf-8
        set fileencoding=utf-8
        set fileformat=unix
        set spell
        "set spl=es_es spell
        set spl=en_us spell

    """""""""""""""""
    """" Search """""
    """""""""""""""""
        set showmatch
        set hlsearch  " Highlight search
        set incsearch " start highlighting while searching
        set scs       " smartCase search

    """""""""""""""""
    """" Mouse """"""
    """""""""""""""""
        set mousehide                 " hide while typing
        set mouse=a

    """""""""""""""""
    """" GUI """"""""
    """""""""""""""""
        set showtabline=2
        set cursorline
        set cursorcolumn

    """""""""""""""""
    """" Backups """"
    """""""""""""""""
        set noswapfile
        " Files, backups and undo
        set undofile
        set undodir=~/.vim/undodir
        " Create undo directory if it doesn't exist
        if !isdirectory(expand(&undodir))
                call mkdir(expand(&undodir), 'p')
        endif
        set undolevels=10000 "maximum number of changes that can be undone
        set undoreload=10000 "maximum number lines to save for undo on a buffer reload

        set hid
        set clipboard=unnamed " Able to copy an paste between xwindows "
        " set laststatus=1         " Enables the status line at the bottom of Vim Only when SPLIT
        set foldmethod=indent
        set foldlevelstart=0
        "set nofoldenable
        "set nonumber
        "set bufhidden=delete " Don't use hidden buffers, delete them when closing windows "

    """""""""""""""""
    "" Vim Faster! ""
    """""""""""""""""
        set ttyfast                 " Faster Terminal, redraws stuff quicker!
        set linespace=0         " No extra spaces between text lines
        set lazyredraw                 " Don't update the display while executing macros
        set timeoutlen=300

    """""""""""""""""
    """" VIM GUI """"
    """""""""""""""""
        " removes the gui options, and it makes them shy xD
        set guioptions-=m         "remove menu bar
        set guioptions-=T         "remove toolbar
        set guioptions-=r         "remove right-hand scroll bar
        set guioptions-=L         "remove left-hand scroll bar
        set guioptions-=e         "remove gui tabbar. nongui stays

    " Set to auto read when a file is changed from the outside
    set autowrite

    " Manual pages including PHP (pear install doc.php.net/pman)
    "set keywordprg=pman\ -a
    source $VIMRUNTIME/ftplugin/man.vim
    nnoremap K :Man --manpath=/usr/share/doc/php5-common/PEAR/pman/ <cword><cr>

    " split to right no left && down no up
    set splitright
    set splitbelow

    " Mantain fold when editing @origanl from vimTip
    set foldopen=hor,mark,percent,quickfix,search,tag,undo
    autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif
    autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => THEME
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    set t_Co=256
    let g:hybrid_use_Xresources = 1
    ColorScheme hybrid

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => MAPPINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    " Local Work Mappings
            map <leader>fe :set foldenable!<cr>
            map <leader>ts :set spell!<cr>
    " visual mode key-binding aid
            vmap A $
            vmap I ^

    """"""""""""""""""""
    " Pluggin Mappings "
    """"""""""""""""""""
        " Ag Grep, better than grep and ack
        map <leader>f :Ag 
		" Align to be maniac vertically aligned
		vmap a :Align 
        " sql align type (right padding)
		vmap A :Align! r
        " Scratcyh
        nnoremap <Leader>st :sp<cr> :Scratch<cr>
         " TagBar
         nnoremap <Leader>rt :TagbarToggle<cr>
        " Gundo
        nnoremap <leader>u :GundoToggle<cr>
        inoremap <expr> <cr> pumvisible() ? "\<c-y>" : "\<c-g>u\<cr>"
        " CtrlP
        map <c-p> :CtrlPMixed<cr>
        map <c-t> :CtrlPBufTagAll<cr>
        map <leader>b :CtrlPBuffer<cr>
        " CamelCase Motion
        map w <Plug>CamelCaseMotion_w
        map b <Plug>CamelCaseMotion_b
        map e <Plug>CamelCaseMotion_e
        sunmap w
        sunmap b
        sunmap e
        omap iw <Plug>CamelCaseMotion_iw
        xmap iw <Plug>CamelCaseMotion_iw
        omap ib <Plug>CamelCaseMotion_ib
        xmap ib <Plug>CamelCaseMotion_ib
        omap ie <Plug>CamelCaseMotion_ie
        xmap ie <Plug>CamelCaseMotion_ie
        " Syntastic
        map <leader>e :Errors<cr>
        " var dump
        nmap <leader>v :call DebugVar()<cr>
        nmap <leader>V :call DebugVarDie()<cr>
        " EasyMotion
        "replace vim search with easymotion
        map  / <Plug>(easymotion-sn)
        omap / <Plug>(easymotion-tn)
        nmap s <Plug>(easymotion-s)
        nmap S <Plug>(easymotion-s2)

    """"""""""""""""""""
    """ Completions """"
    """"""""""""""""""""
        " Line Completion
        imap <C-l> <c-x><C-l>
        " Omni Completion
        imap <C-k> <c-x><c-o>
        " Spelling Completion
        imap <C-h> <c-x>s
        " File Completion
        imap <C-f> <c-x><c-f>
        " CommandLine Completion not usefull
        imap <C-j> <c-x><c-v>

    """"""""""""""""""""
    "" SmartShortcuts ""
    """"""""""""""""""""
        imap :w <Esc>:w
        imap ;; <C-o>A;<Esc>
        vmap <leader>f :fo<cr>
        vmap K k
        nnoremap f: /<C-f>
        map <leader>tn :set number!<cr>
        " Copying pasting
        imap <C-v> <C-o>"+P
        vmap <C-p> "+p<cr>
        vmap <C-C> "+y
        vmap  "+y
        " Gui menus
        nnoremap <S-F1> :if &go=~#'m'<Bar>set go-=m<Bar>else<Bar>set go+=m<Bar>endif<CR>
        nnoremap <S-F2> :if &go=~#'T'<Bar>set go-=T<Bar>else<Bar>set go+=T<Bar>endif<CR>
        nnoremap <S-F3> :if &go=~#'e'<Bar>set go-=e<Bar>else<Bar>set go+=e<Bar>endif<CR>
        " Clear screen clears search highlighting.
        nnoremap <C-L> :nohl<CR><C-L>

    " gem install bcat ( to preview files in html
        map <leader>m :!markdown % \|bcat<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => TAB, SPLITS & NAVIGATIONS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    " Splits Resize GUI and nongui
    nmap _ :wincmd -<cr>
    nmap + :wincmd +<cr>
    nmap = :wincmd <<cr>
    nmap - :wincmd ><cr>

    " Map C-[jk] to move between splits && C-[gh] to move between tabs
    nmap <c-j> :wincmd w<cr>
    nmap <c-k> :wincmd W<cr>
    nmap <c-g> :tabprevious<cr>
    nmap <c-h> :tabnext<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => PLUG INS SETTINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    " Vim Cycle WORDS
        call AddCycleGroup(['set', 'get'])
        call AddCycleGroup(['push', 'pop'])
        call AddCycleGroup(['even', 'odd'])
        call AddCycleGroup(['mas', 'menos'])
        call AddCycleGroup(['prev', 'next'])
        call AddCycleGroup(['start', 'end'])
        call AddCycleGroup(['read', 'write'])
        call AddCycleGroup(['remove', 'add'])
        call AddCycleGroup(['before', 'after'])
        call AddCycleGroup(['enable', 'disable'])
        call AddCycleGroup(['internal', 'external'])
        call AddCycleGroup(['short', 'normal', 'long'])
        call AddCycleGroup(['subscribe', 'unsubscribe'])
        call AddCycleGroup(['header', 'body', 'footer'])
        call AddCycleGroup(['red', 'blue', 'green', 'yellow'])
        call AddCycleGroup(['tiny', 'small', 'medium', 'big', 'huge'])
        call AddCycleGroup(['pico', 'nano', 'micro', 'mili', 'kilo', 'mega', 'giga', 'tera', 'peta'])
        call AddCycleGroup(['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirdteen', 'fourteen', 'fifthteen', 'sixteen'])
        " Vim Cycle PHP
        call AddCycleGroup(['protected', 'private', 'public'])
        " Vim Cycle CSS
        call AddCycleGroup(['height', 'width'])
        " Vim Cycle SQL
        call AddCycleGroup(['IN', 'OUT'])
        call AddCycleGroup(['ASC', 'desc'])
        call AddCycleGroup(['INTO', 'FROM'])
        call AddCycleGroup(['LOW', 'HIGH'])
        call AddCycleGroup(['PROCEDURE', 'FUNCTION'])
        call AddCycleGroup(['DELETE', 'UPDATE', 'INSERT', 'SELECT', 'RETURN'])

    " Vim NERDtree close when open (not preview)
        let NERDTreeQuitOnOpen = 1

    " Indexer disable warnings
        let g:indexer_disableCtagsWarning=1

    " Jquery Syntaxis
        au BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery

    " CntrlP Fuzzy Find
        let g:ctrlp_working_path_mode = 'ra'
        let g:ctrlp_extensions = [ 'mixed', 'buffertag', 'undo', 'changes', 'tag', 'dir', 'line' ]
        " try to get it faster
        let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup --hidden --ignore .git --ignore .svn --ignore .hg --ignore .DS_Store --ignore "**/*.pyc"  -g ""'

    " EasyMotion
        let g:EasyMotion_smartcase = 1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => PLUG INS mine Aem
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
    function! DebugVar()
            if &ft == 'javascript'
                    exe "normal oconsole.debug();"
                    exe "normal hhp"
            elseif &ft == 'php'
                    exe "normal ovar_dump();"
                    exe "normal hhp"
            elseif &ft == 'sql'
                    exe "normal oselect ;"
                    exe "normal hp"
            else
                    echo &ft
                    echo "not implemente yet, please do"
            endif
    endfunction

    function! DebugVarDie()
            if &ft == 'javascript'
                    exe "normal oconsole.debug();"
                    exe "normal hhp"
                    exe "normal oalert();;"
            elseif &ft == 'php'
                    exe "normal opr();"
                    exe "normal hhp"
                    exe "normal odie;"
            else
                    echo &ft
                    echo "not implemente yet, please do"
            endif
    endfunction

    function! DiffToggle()
            if &diff
                    diffoff
            else
                    diffthis
            endif
    endfunction
